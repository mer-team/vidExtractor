name: vidExtractor Node.js CI/CD

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:    
    - name: Setup RabbitMQ Image
      uses: mer-team/rabbitmq-mng-action@v1.2
      with:
        RABBITMQ_USER: 'merUser'
        RABBITMQ_PASS: 'passwordMER'
        RABBITMQ_PORT: 5672
        RABBITMQ_MNG_PORT: 15672
        RABBITMQ_TAG: '3-management-alpine'

    - name: Checkout vidExtractor Project
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Build vidExtractor Project
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: vidextractor:latest

    - name: Run local project Image
    run: docker run -d -e TIME=10 -e USER=merUser -e PASS=passwordMER -e HOST=localhost -e MNG_PORT=15672 --net=host vidextractor:latest
    #  uses: addnab/docker-run-action@v1
    #  with:
    #    image: local/vidextractor:latest
    #    options: -v $GITHUB_WORKSPACE/Audios:/vidExtrator/Audios

    - name: Wait for HTTP 200
      run: docker run -e TIME=10 -e USER=merUser -e PASS=passwordMER -e URL=http://localhost:15672/api/whoami --net=host merteam/wait-for-http:latest

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install --also=dev
      working-directory: src
    #- name: Runnning build
    #  run: npm run build --if-present
    - name: Running tests
      run: npm test
      working-directory: src
      env:
        CI: true